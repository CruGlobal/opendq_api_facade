package org.cru.model;

/**
 * Object to hold information that comes back from OpenDQ about the match found
 * in a more easily maintainable manner
 *
 * Created by William.Randall on 6/10/14.
 */
public class SearchResponse
{
    private double score;
    private String id;
    private ResultData resultValues;
    private String type;

    public double getScore()
    {
        return score;
    }

    public void setScore(double score)
    {
        this.score = score;
    }

    public String getId()
    {
        return id;
    }

    public void setId(String id)
    {
        this.id = id;
    }

    public ResultData getResultValues()
    {
        return resultValues;
    }

    public void setResultValues(ResultData resultValues)
    {
        this.resultValues = resultValues;
    }

    public String getType()
    {

        return type;
    }

    public void setType(String type)
    {
        this.type = type;
    }

    @Override
    public boolean equals(Object objectToCompare)
    {
        if(objectToCompare == this) return true;
        if(objectToCompare == null || !(objectToCompare instanceof SearchResponse)) return false;

        ResultData resultValuesToCompare = ((SearchResponse)objectToCompare).getResultValues();

        return this.resultValues.getFirstName().equalsIgnoreCase(resultValuesToCompare.getFirstName()) &&
            this.resultValues.getLastName().equalsIgnoreCase(resultValuesToCompare.getLastName()) &&
            this.resultValues.getAddressLine1().equalsIgnoreCase(resultValuesToCompare.getAddressLine1()) &&
            this.resultValues.getAddressLine2().equalsIgnoreCase(resultValuesToCompare.getAddressLine2()) &&
            this.resultValues.getCity().equalsIgnoreCase(resultValuesToCompare.getCity()) &&
            this.resultValues.getState().equalsIgnoreCase(resultValuesToCompare.getState()) &&
            this.resultValues.getZip().equalsIgnoreCase(resultValuesToCompare.getZip()) &&
            this.resultValues.getStandardizedFirstName().equalsIgnoreCase(resultValuesToCompare.getStandardizedFirstName());
    }

    //Generated by IntelliJ
    @Override
    public int hashCode()
    {
        int result;
        long temp;
        temp = Double.doubleToLongBits(score);
        result = (int) (temp ^ (temp >>> 32));
        result = 31 * result + id.hashCode();
        result = 31 * result + resultValues.hashCode();
        return result;
    }
}
